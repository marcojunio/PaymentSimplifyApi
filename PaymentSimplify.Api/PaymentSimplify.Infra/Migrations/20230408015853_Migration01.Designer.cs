// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentSimplify.Infra.Persistence;

#nullable disable

namespace PaymentSimplify.Infra.Migrations
{
    [DbContext(typeof(PaymentSimplifyContext))]
    [Migration("20230408015853_Migration01")]
    partial class Migration01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.AccountBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CREATED");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LAST_MODIFIED");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("LAST_MODIFIED_BE");

                    b.HasKey("Id");

                    b.ToTable("ACCOUNT_BANK", (string)null);
                });

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.Auth", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<Guid>("COSTUMER_ID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CREATED");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LAST_MODIFIED");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("LAST_MODIFIED_BE");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("COSTUMER_ID")
                        .IsUnique();

                    b.ToTable("AUTH", (string)null);
                });

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<Guid>("ACCOUNT_BANK_ID")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CREATED");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("CREATED_BY");

                    b.Property<string>("FistName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LAST_MODIFIED");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("LAST_MODIFIED_BE");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("LAST_NAME");

                    b.HasKey("Id");

                    b.HasIndex("ACCOUNT_BANK_ID");

                    b.ToTable("CUSTOMER", (string)null);
                });

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CREATED");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("CREATED_BY");

                    b.Property<Guid>("ID_ACCOUNT_BANK")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ID_COSTUMER_PAYEE")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("LastModified")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LAST_MODIFIED");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext")
                        .HasColumnName("LAST_MODIFIED_BE");

                    b.HasKey("Id");

                    b.HasIndex("ID_ACCOUNT_BANK");

                    b.HasIndex("ID_COSTUMER_PAYEE");

                    b.ToTable("TRANSACTIONS", (string)null);
                });

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.AccountBank", b =>
                {
                    b.OwnsOne("PaymentSimplify.Domain.ValueObjects.Money", "Balance", b1 =>
                        {
                            b1.Property<Guid>("AccountBankId")
                                .HasColumnType("char(36)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("AMOUNT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("CURRENCY");

                            b1.HasKey("AccountBankId");

                            b1.ToTable("ACCOUNT_BANK");

                            b1.WithOwner()
                                .HasForeignKey("AccountBankId");
                        });

                    b.Navigation("Balance")
                        .IsRequired();
                });

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.Auth", b =>
                {
                    b.HasOne("PaymentSimplify.Domain.Entities.Customer", "Customer")
                        .WithOne()
                        .HasForeignKey("PaymentSimplify.Domain.Entities.Auth", "COSTUMER_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("PaymentSimplify.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("AuthId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Addreess")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("varchar(80)")
                                .HasColumnName("EMAIL");

                            b1.HasKey("AuthId");

                            b1.HasIndex("Addreess")
                                .IsUnique();

                            b1.ToTable("AUTH");

                            b1.WithOwner()
                                .HasForeignKey("AuthId");
                        });

                    b.Navigation("Customer");

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.Customer", b =>
                {
                    b.HasOne("PaymentSimplify.Domain.Entities.AccountBank", "AccountBank")
                        .WithMany()
                        .HasForeignKey("ACCOUNT_BANK_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("PaymentSimplify.Domain.ValueObjects.Document", "Document", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Doc")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)")
                                .HasColumnName("DOCUMENT");

                            b1.Property<int>("TypeDocument")
                                .HasColumnType("int")
                                .HasColumnName("TYPE_DOCUMENT");

                            b1.HasKey("CustomerId");

                            b1.HasIndex("Doc")
                                .IsUnique();

                            b1.ToTable("CUSTOMER");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("AccountBank");

                    b.Navigation("Document")
                        .IsRequired();
                });

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("PaymentSimplify.Domain.Entities.AccountBank", "AccountBank")
                        .WithMany("Transactions")
                        .HasForeignKey("ID_ACCOUNT_BANK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaymentSimplify.Domain.Entities.Customer", "Payee")
                        .WithMany()
                        .HasForeignKey("ID_COSTUMER_PAYEE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountBank");

                    b.Navigation("Payee");
                });

            modelBuilder.Entity("PaymentSimplify.Domain.Entities.AccountBank", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
